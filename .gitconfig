[alias]
        tree = log --graph --oneline --decorate --color --all
        rbpush = "!f() { git push --force origin "$1"; }; f"
        fb = "!f() { git filter-branch --force --index-filter ' git rm --cached --ignore-unmatch "$1"'  --prune-empty --tag-name-filter cat -- --all; }; f"
        squash = "!f() { git reset --soft "$1"; }; f"
	git = !exec git
        checkoute = checkout
[user]
	name =
	email =
[core]
	editor = vim
[credential]
	helper = cache --timeout=2628000

#Notes
#Rebasing
#git checkout -b develop
#git checkout master
#git pull
#git checkout develop
#git rebase master
#git rbpush
#git checkout master
#git pull
#git merge develop

#Merging
#git checkout develop
#git commit in develop
#git checkout master
#git merge develop

#fb - remove a file from the git repo and all of its history
#     for when you accidentally add some kind of credentials or token

#delete branch
#remote
#git push origin --delete <branch_name>
#local
#git branch -D <branch_name>

#View diff of a commit
#git diff COMMITHASH^!

#Change previous commit message
#git commit --amend -m "Message"

#Reset your branch to remote version of branch
#git reset --hard origin/branch

#Reset to any point in history
#git reflog
#find point you want to reset to and look for HEAD@{#}
#git reset --hard HEAD@{#}

#Edit old commit author name and email
#git filter-branch --commit-filter '
#        if [ "$GIT_COMMITTER_NAME" = "<Old Name>" ];
#        then
#                GIT_COMMITTER_NAME="<New Name>";
#                GIT_AUTHOR_NAME="<New Name>";
#                GIT_COMMITTER_EMAIL="<New Email>";
#                GIT_AUTHOR_EMAIL="<New Email>";
#                git commit-tree "$@";
#        else
#                git commit-tree "$@";
#        fi' HEAD

# Remove untracked files from the working tree
# Step 1 is to show what will be deleted by using the -n option:
# git clean -n
# Clean Step - beware: this will delete files:
# git clean -f

# Merge and take changes all changes from current branch or branch being merges
# git merge <branchname> -s <strategy>
# strategy values
# ours = current branch
# theirs = branch merging in
